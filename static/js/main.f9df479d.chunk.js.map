{"version":3,"sources":["api/api.js","redux/employeesReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","api","requestUsers","get","request","SET_USERS","SET_ACTIVE_USERS_ID","ADD_ACTIVE_USER","REMOVE_ACTIVE_USER","initialState","users","activeUsersId","Set","setUsers","type","payload","setActiveUsersId","ids","addActiveUser","userId","removeActiveUser","fetchUsers","dispatch","a","response","data","employeesReducer","state","action","activeUsersIdCopy","add","delete","reducers","combineReducers","employees","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","EmployeesContainer","React","lazy","App","className","fallback","path","render","to","ConnectedApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yRAEMA,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,8DAGAC,EAAM,CACTC,aADS,WACO,OAAD,0HACKL,EAASM,IAAI,SADlB,cACXC,EADW,yBAEVA,GAFU,+CCLnBC,EAAY,+BACZC,EAAsB,yCACtBC,EAAkB,qCAClBC,EAAqB,wCAErBC,EAAe,CACnBC,MAAO,GACPC,cAAe,IAAIC,KA6BRC,EAAW,SAACH,GAAD,MAAY,CAAEI,KAAMT,EAAWU,QAASL,IACnDM,EAAmB,SAACC,GAAD,MAAU,CACxCH,KAAMR,EACNS,QAASE,IAEEC,EAAgB,SAACC,GAAD,MAAa,CACxCL,KAAMP,EACNQ,QAASI,IAEEC,EAAmB,SAACD,GAAD,MAAa,CAC3CL,KAAMN,EACNO,QAASI,IAIEE,EAAa,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,sEACPtB,EAAIC,eADG,OACxBsB,EADwB,OAExBd,EAAQc,EAASC,KACvBH,EAAST,EAASH,IAHY,2CAAN,uDAMXgB,IA/CU,WAAmC,IAAlCC,EAAiC,uDAAzBlB,EAAcmB,EAAW,uCACzD,OAAQA,EAAOd,MACb,KAAKT,EACH,OAAO,2BAAKsB,GAAZ,IAAmBjB,MAAOkB,EAAOb,UAEnC,KAAKT,EACH,IAAMuB,EAAoB,IAAIjB,IAAIgB,EAAOb,SACzC,OAAO,2BAAKY,GAAZ,IAAmBhB,cAAekB,IAEpC,KAAKtB,EACH,IAAMsB,EAAoB,IAAIjB,IAAIe,EAAMhB,eAExC,OADAkB,EAAkBC,IAAIF,EAAOb,SACtB,2BAAKY,GAAZ,IAAmBhB,cAAekB,IAEpC,KAAKrB,EACH,IAAMqB,EAAoB,IAAIjB,IAAIe,EAAMhB,eAExC,OADAkB,EAAkBE,OAAOH,EAAOb,SACzB,2BAAKY,GAAZ,IAAmBhB,cAAekB,IAGpC,QACE,OAAOF,K,wJC7BPK,EAAWC,YAAgB,CAC/BC,UAAWR,MAGPS,EAAmBC,OAAOC,sCAAwCC,IAMzDC,EALDC,YACZR,EACAG,EAAiBM,YAAgBC,O,OCN7BC,EAAqBC,IAAMC,MAAK,kBACpC,gCAGIC,EAAM,kBACV,qBAAKC,UAAU,MAAf,SACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,OAAQ,kBAAM,cAACP,EAAD,OACvC,cAAC,IAAD,CAAOO,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAG,0BAc3BC,EARM,kBACnB,cAAC,IAAD,UACE,cAAC,IAAD,CAAUb,MAAOA,EAAjB,SACE,cAAC,EAAD,SCXSc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f9df479d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://yalantis-react-school-api.yalantis.com/api/task0/'\r\n})\r\n\r\nexport const api = {\r\n    async requestUsers() {\r\n        const request = await instance.get('users')\r\n        return request\r\n    }\r\n\r\n}\r\n\r\nexport default api;","import { api } from \"../api/api\";\r\n\r\nconst SET_USERS = \"yalantis/employees/SET_USERS\";\r\nconst SET_ACTIVE_USERS_ID = \"yalantis/employees/SET_ACTIVE_USERS_ID\";\r\nconst ADD_ACTIVE_USER = \"yalantis/employees/ADD_ACTIVE_USER\";\r\nconst REMOVE_ACTIVE_USER = \"yalantis/employees/REMOVE_ACTIVE_USER\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  activeUsersId: new Set(),\r\n};\r\n\r\nconst employeesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS: {\r\n      return { ...state, users: action.payload };\r\n    }\r\n    case SET_ACTIVE_USERS_ID: {\r\n      const activeUsersIdCopy = new Set(action.payload);\r\n      return { ...state, activeUsersId: activeUsersIdCopy };\r\n    }\r\n    case ADD_ACTIVE_USER: {\r\n      const activeUsersIdCopy = new Set(state.activeUsersId);\r\n      activeUsersIdCopy.add(action.payload);\r\n      return { ...state, activeUsersId: activeUsersIdCopy };\r\n    }\r\n    case REMOVE_ACTIVE_USER: {\r\n      const activeUsersIdCopy = new Set(state.activeUsersId);\r\n      activeUsersIdCopy.delete(action.payload);\r\n      return { ...state, activeUsersId: activeUsersIdCopy };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// action creators\r\nexport const setUsers = (users) => ({ type: SET_USERS, payload: users });\r\nexport const setActiveUsersId = (ids) => ({\r\n  type: SET_ACTIVE_USERS_ID,\r\n  payload: ids,\r\n});\r\nexport const addActiveUser = (userId) => ({\r\n  type: ADD_ACTIVE_USER,\r\n  payload: userId,\r\n});\r\nexport const removeActiveUser = (userId) => ({\r\n  type: REMOVE_ACTIVE_USER,\r\n  payload: userId,\r\n});\r\n\r\n// thunks\r\nexport const fetchUsers = () => async (dispatch) => {\r\n  const response = await api.requestUsers();\r\n  const users = response.data;\r\n  dispatch(setUsers(users));\r\n};\r\n\r\nexport default employeesReducer;\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport employeesReducer from \"./employeesReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  employees: employeesReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Suspense } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nconst EmployeesContainer = React.lazy(() =>\n  import(\"./components/Employees/EmployeesContainer\")\n);\n\nconst App = () => (\n  <div className=\"App\">\n    <Suspense fallback={<div>loading...</div>}>\n      <Switch>\n        <Route path=\"/employees\" render={() => <EmployeesContainer />} />\n        <Route render={() => <Redirect to=\"/employees\" />} />\n      </Switch>\n    </Suspense>\n  </div>\n);\n\nconst ConnectedApp = () => (\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>\n);\n\nexport default ConnectedApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}