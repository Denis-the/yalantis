{"version":3,"sources":["api/api.js","redux/employeesReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","api","requestUsers","_requestUsers","Object","asyncToGenerator","regenerator_default","a","mark","_callee","request","wrap","_context","prev","next","get","sent","abrupt","stop","apply","this","arguments","SET_USERS","initialState","users","activeUsersId","Set","setUsers","type","payload","setActiveUsersId","ids","addActiveUser","userId","removeActiveUser","fetchUsers","_ref","dispatch","response","data","_x","employeesReducer","state","length","undefined","action","objectSpread","activeUsersIdCopy","add","delete","reducers","combineReducers","employees","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","EmployeesContainer","React","lazy","__webpack_require__","e","then","bind","App","react_default","createElement","className","react","fallback","react_router","path","render","to","ConnectedApp","react_router_dom","basename","process","es","App_App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.05a35bf8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://yalantis-react-school-api.yalantis.com/api/task0/'\r\n})\r\n\r\nexport const api = {\r\n    async requestUsers() {\r\n        const request = await instance.get('users')\r\n        return request\r\n    }\r\n\r\n}","import { api } from \"../api/api\";\r\n\r\nconst SET_USERS = \"yalantis/employees/SET_USERS\";\r\nconst SET_ACTIVE_USERS_ID = \"yalantis/employees/SET_ACTIVE_USERS_ID\";\r\nconst ADD_ACTIVE_USER = \"yalantis/employees/ADD_ACTIVE_USER\";\r\nconst REMOVE_ACTIVE_USER = \"yalantis/employees/REMOVE_ACTIVE_USER\";\r\n\r\nconst initialState = {\r\n  users: [],\r\n  activeUsersId: new Set(),\r\n};\r\n\r\nconst employeesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USERS: {\r\n      return { ...state, users: action.payload };\r\n    }\r\n    case SET_ACTIVE_USERS_ID: {\r\n      const activeUsersIdCopy = new Set(action.payload);\r\n      return { ...state, activeUsersId: activeUsersIdCopy };\r\n    }\r\n    case ADD_ACTIVE_USER: {\r\n      const activeUsersIdCopy = new Set(state.activeUsersId);\r\n      activeUsersIdCopy.add(action.payload);\r\n      return { ...state, activeUsersId: activeUsersIdCopy };\r\n    }\r\n    case REMOVE_ACTIVE_USER: {\r\n      const activeUsersIdCopy = new Set(state.activeUsersId);\r\n      activeUsersIdCopy.delete(action.payload);\r\n      return { ...state, activeUsersId: activeUsersIdCopy };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// action creators\r\nexport const setUsers = (users) => ({ type: SET_USERS, payload: users });\r\nexport const setActiveUsersId = (ids) => ({\r\n  type: SET_ACTIVE_USERS_ID,\r\n  payload: ids,\r\n});\r\nexport const addActiveUser = (userId) => ({\r\n  type: ADD_ACTIVE_USER,\r\n  payload: userId,\r\n});\r\nexport const removeActiveUser = (userId) => ({\r\n  type: REMOVE_ACTIVE_USER,\r\n  payload: userId,\r\n});\r\n\r\n// thunks\r\nexport const fetchUsers = () => async (dispatch) => {\r\n  const response = await api.requestUsers();\r\n  const users = response.data;\r\n  dispatch(setUsers(users));\r\n};\r\n\r\nexport default employeesReducer;\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport employeesReducer from \"./employeesReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  employees: employeesReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Suspense } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport store from \"./redux/store\";\n\nconst EmployeesContainer = React.lazy(() =>\n  import(\"./components/Employees/EmployeesContainer\")\n);\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<div>loading...</div>}>\n        <Switch>\n          <Route path=\"/employees\" render={() => <EmployeesContainer />} />\n          <Route render={() => <Redirect to='/employees'/>} />\n        </Switch>\n      </Suspense>\n    </div>\n  );\n};\n\nconst ConnectedApp = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default ConnectedApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}