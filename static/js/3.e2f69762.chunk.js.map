{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","utils/sessionStorage.js","hooks/employees.js","../node_modules/reselect/es/index.js","redux/selectors/employeesSel.js","components/Employees/EmployeesList/EmployeesItem.jsx","components/Employees/EmployeesList/EmployeesSection.jsx","components/Employees/EmployeesList/EmployeesList.jsx","utils/monthses.js","components/Employees/EmployeesDOB/EmployeesDOBUser.jsx","components/Employees/EmployeesDOB/EmployeesDOBMonth.jsx","components/Employees/EmployeesDOB/EmployeesDOB.jsx","components/Employees/Employees.jsx","components/Employees/EmployeesContainer.jsx"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","getSessionStorageActiveUsersId","storage","window","sessionStorage","getItem","split","useSelectUser","dispatch","useDispatch","userId","addActiveUser","cachedActiveUsersId","push","setItem","addSessionStorageActiveUserId","useUnselectUser","removeActiveUser","filteredArr","filter","item","removeSessionStorageActiveUserId","defaultEqualityCheck","a","b","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","every","dep","dependencyTypes","map","join","Error","getDependencies","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","getSortedByLastNameUsers","state","employees","users","sort","lastName","getActiveUsers","activeUsersId","user","has","id","EmployeesItem","React","memo","_ref","activateUser","deactivateUser","isActive","react_default","createElement","className","firstName","type","name","checked","onChange","htmlFor","displayName","EmployeesSection","letter","activeUsers","filteredUsers","useSelector","getSortedUsersFiltratedByLetterCreator","u","EmployeesList_EmployeesItem","key","find","alfabet","EmployeesList","EmployeesList_EmployeesSection","monthNames","0","1","2","3","4","5","6","7","8","9","10","11","EmployeesDOBUser","rawDate","Date","dob","formattedDate","getDate","getMonth","getFullYear","EmployeesDOBMonth","monthName","EmployeesDOB_EmployeesDOBUser","monthOrder","currentMonth","getMonthOrder","EmployeesDOB","monthId","EmployeesDOB_EmployeesDOBMonth","Employees","EmployeesList_EmployeesList","EmployeesDOB_EmployeesDOB","EmployeesContainer","useEffect","fetchUsers","setActiveUsersId","components_Employees_Employees"],"mappings":"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","file":"static/js/3.e2f69762.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const getSessionStorageActiveUsersId = () => {\r\n  let cachedActiveUsersId;\r\n  const storage = window.sessionStorage.getItem(\"activeUsers\");\r\n  if (storage) {\r\n    cachedActiveUsersId = [...storage.split(\",\")];\r\n  } else {\r\n    cachedActiveUsersId = [];\r\n  }\r\n  return cachedActiveUsersId;\r\n};\r\n\r\nexport const addSessionStorageActiveUserId = (userId) => {\r\n  const cachedActiveUsersId = getSessionStorageActiveUsersId();\r\n  cachedActiveUsersId.push(userId);\r\n  window.sessionStorage.setItem(\"activeUsers\", cachedActiveUsersId);\r\n};\r\n\r\nexport const removeSessionStorageActiveUserId = (userId) => {\r\n  const cachedActiveUsersId = getSessionStorageActiveUsersId();\r\n  const filteredArr = cachedActiveUsersId.filter((item) => userId !== item);\r\n  window.sessionStorage.setItem(\"activeUsers\", filteredArr);\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { addActiveUser, removeActiveUser } from \"../redux/employeesReducer\";\r\nimport {\r\n  addSessionStorageActiveUserId,\r\n  removeSessionStorageActiveUserId,\r\n} from \"../utils/sessionStorage\";\r\n\r\nexport const useSelectUser = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (userId) => {\r\n    dispatch(addActiveUser(userId));\r\n    addSessionStorageActiveUserId(userId);\r\n  };\r\n};\r\n\r\nexport const useUnselectUser = () => {\r\n  const dispatch = useDispatch();\r\n  return (userId) => {\r\n    dispatch(removeActiveUser(userId));\r\n    removeSessionStorageActiveUserId(userId);\r\n  };\r\n};\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\";\r\n\r\nexport const getUsers = (state) => state.employees.users;\r\nexport const getActiveUsersId = (state) => state.employees.activeUsersId;\r\n\r\nexport const getSortedByLastNameUsers = createSelector(getUsers, (users) => {\r\n  return users.sort((a, b) => {\r\n    if (a.lastName < b.lastName) return -1;\r\n    if (a.lastName > b.lastName) return 1;\r\n    return 0;\r\n  });\r\n});\r\n\r\nexport const getSortedUsersFiltratedByLetterCreator = (letter) => {\r\n  return createSelector(getSortedByLastNameUsers, (users) => {\r\n    return users.filter((user) => user.lastName[0] === letter);\r\n  });\r\n};\r\n\r\nexport const getActiveUsers = createSelector(\r\n  getSortedByLastNameUsers,\r\n  getActiveUsersId,\r\n  (users, activeUsersId) => {\r\n    return users.filter((user) => activeUsersId.has(user.id));\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EmployeesItem = React.memo(\r\n  ({ user, activateUser, deactivateUser, isActive }) => {\r\n    return (\r\n      <div className=\"empl__item\">\r\n        <h4 className={\"item__name\" + (isActive ? \" active\" : \"\")}>\r\n          {user.lastName} {user.firstName}\r\n        </h4>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id={\"inactive-\" + user.id}\r\n              name={user.id}\r\n              checked={!isActive}\r\n              onChange={() => deactivateUser(user.id)}\r\n            />\r\n            <label htmlFor={\"inactive-\" + user.id}>not active</label>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id={\"active-\" + user.id}\r\n              name={user.id}\r\n              checked={isActive}\r\n              onChange={() => activateUser(user.id)}\r\n            />\r\n            <label htmlFor={\"active-\" + user.id}>active</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nEmployeesItem.displayName = \"EmployeesItem\";\r\nEmployeesItem.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    dob: PropTypes.string,\r\n  }),\r\n  activateUser: PropTypes.func,\r\n  deactivateUser: PropTypes.func,\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nexport default EmployeesItem;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getSortedUsersFiltratedByLetterCreator } from \"../../../redux/selectors/employeesSel\";\r\nimport PropTypes from \"prop-types\";\r\nimport EmployeesItem from \"./EmployeesItem\";\r\n\r\nconst EmployeesSection = React.memo(\r\n  ({ letter, activeUsers, activateUser, deactivateUser }) => {\r\n    const filteredUsers = useSelector(\r\n      getSortedUsersFiltratedByLetterCreator(letter)\r\n    );\r\n    return (\r\n      <div className=\"empl__section\">\r\n        <h2 className=\"section__header\">{letter}</h2>\r\n        {filteredUsers.length\r\n          ? filteredUsers.map((u) => (\r\n              <EmployeesItem\r\n                key={u.id}\r\n                user={u}\r\n                activateUser={activateUser}\r\n                deactivateUser={deactivateUser}\r\n                isActive={activeUsers.find(item => item === u) ? true : false}\r\n              />\r\n            ))\r\n          : \"-----\"}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nEmployeesSection.displayName = \"EmployeesSection\";\r\nEmployeesSection.propTypes = {\r\n  letter: function (props, propName, componentName) {\r\n    if (typeof props.letter !== \"string\" || props.letter.length !== 1) {\r\n      return new Error(\r\n        \"Invalid prop `\" +\r\n          propName +\r\n          \"` of component `EmployeesSection`, expected string with length = 1\"\r\n      );\r\n    }\r\n  },\r\n  activeUsers: PropTypes.array,\r\n  activateUser: PropTypes.func,\r\n  deactivateUser: PropTypes.func,\r\n};\r\n\r\nexport default EmployeesSection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport EmployeesSection from './EmployeesSection'\r\n\r\nconst alfabet = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\",\r\n];\r\n\r\nconst EmployeesList = React.memo(\r\n  ({ activeUsers, activateUser, deactivateUser }) => {\r\n    return (\r\n      <div className=\"empl\">\r\n        <h2 className=\"header\">Employees</h2>\r\n        <div className=\"empl__list\">\r\n          {alfabet.map((letter) => (\r\n            <EmployeesSection\r\n              key={letter}\r\n              letter={letter}\r\n              activeUsers={activeUsers}\r\n              activateUser={activateUser}\r\n              deactivateUser={deactivateUser}\r\n            />\r\n          ))}\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n);\r\n\r\nEmployeesList.displayName = 'EmployeesList';\r\nEmployeesList.propTypes = {\r\n  activeUsers: PropTypes.array,\r\n  activateUser: PropTypes.func,\r\n  deactivateUser: PropTypes.func,\r\n};\r\n\r\nexport default EmployeesList;\r\n","\r\nexport const getMonthOrder = () => {\r\n    const monthOrder = [];\r\n    const currentMonth = new Date().getMonth();\r\n    for (let i = currentMonth; i < 12; i++) {\r\n      monthOrder.push(i);\r\n    }\r\n    for (let i = 0; i < currentMonth; i++) {\r\n      monthOrder.push(i);\r\n    }\r\n    return monthOrder;\r\n  };\r\n\r\nexport const monthNames = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"September\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n  };","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { monthNames } from \"../../../utils/monthses\";\r\n\r\nconst EmployeesDOBUser = React.memo(({ user }) => {\r\n  const rawDate = new Date(user.dob);\r\n  const formattedDate = `${rawDate.getDate()} ${monthNames[rawDate.getMonth()]} \r\n            ${rawDate.getFullYear()} year`;\r\n  return (\r\n    <li className=\"birthdays__item\">\r\n      {user.lastName} {user.firstName} - {formattedDate}\r\n    </li>\r\n  );\r\n});\r\n\r\nEmployeesDOBUser.displayName = \"EmployeesDOBUser\";\r\nEmployeesDOBUser.propTypes = {\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    firstName: PropTypes.string,\r\n    lastName: PropTypes.string,\r\n    dob: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default EmployeesDOBUser;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport EmployeesDOBUser from \"./EmployeesDOBUser\";\r\n\r\nconst EmployeesDOBMonth = React.memo(({ monthName, users }) => {\r\n  if (users.length === 0) return null;\r\n  return (\r\n    <div className=\"birthdays__section\">\r\n      <h3>{monthName}</h3>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <EmployeesDOBUser key={user.id} user={user} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nEmployeesDOBMonth.displayName = \"EmployeesDOBMonth\";\r\nEmployeesDOBMonth.propTypes = {\r\n  monthName: PropTypes.string,\r\n  users: PropTypes.array,\r\n};\r\n\r\nexport default EmployeesDOBMonth;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport EmployeesDOBMonth from \"./EmployeesDOBMonth\";\r\nimport { getMonthOrder, monthNames } from \"../../../utils/monthses\";\r\n\r\nconst monthOrder = getMonthOrder();\r\n\r\nconst EmployeesDOB = React.memo(({ activeUsers }) => {\r\n  return (\r\n    <div className=\"birthdays__container\">\r\n      <h2 className=\"header\">Employees birthday</h2>\r\n      {activeUsers.length === 0 ? (\r\n        <div className=\"birthdays__monthses-placeholder\">Employees List is empty</div>\r\n      ) : (\r\n        <div className=\"birthdays__monthses\">\r\n          {monthOrder.map((monthId) => (\r\n            <EmployeesDOBMonth\r\n              key={monthId}\r\n              monthName={monthNames[monthId]}\r\n              users={activeUsers.filter(\r\n                (user) => new Date(user.dob).getMonth() === monthId\r\n              )}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nEmployeesDOB.displayName = \"EmployeesDOB\";\r\nEmployeesDOB.propTypes = {\r\n  activeUsers: PropTypes.array,\r\n};\r\n\r\nexport default EmployeesDOB;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport EmployeesList from \"./EmployeesList/EmployeesList\";\r\nimport EmployeesDOB from \"./EmployeesDOB/EmployeesDOB\";\r\n\r\nconst Employees = ({ activeUsers, activateUser, deactivateUser }) => {\r\n  return (\r\n    <div className=\"empl__container\">\r\n      <EmployeesList\r\n        activeUsers={activeUsers}\r\n        activateUser={activateUser}\r\n        deactivateUser={deactivateUser}\r\n      />\r\n      <EmployeesDOB\r\n        activeUsers={activeUsers}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nEmployees.displayName = \"Employees\";\r\nEmployees.propTypes = {\r\n  activeUsers: PropTypes.array,\r\n  activateUser: PropTypes.func,\r\n  deactivateUser: PropTypes.func,\r\n};\r\n\r\nexport default Employees;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSelectUser, useUnselectUser } from \"../../hooks/employees\";\r\nimport { fetchUsers, setActiveUsersId } from \"../../redux/employeesReducer\";\r\nimport { getActiveUsers } from \"../../redux/selectors/employeesSel\";\r\nimport { getSessionStorageActiveUsersId } from \"../../utils/sessionStorage\";\r\nimport Employees from \"./Employees\";\r\n\r\nconst EmployeesContainer = React.memo(() => {\r\n  const dispatch = useDispatch();\r\n  const activeUsers = useSelector(getActiveUsers);\r\n  const activateUser = useSelectUser();\r\n  const deactivateUser = useUnselectUser();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n    const cachedActiveUsersId = getSessionStorageActiveUsersId();\r\n    dispatch(setActiveUsersId(cachedActiveUsersId));\r\n  }, []);\r\n\r\n  return (\r\n    <Employees\r\n      activeUsers={activeUsers}\r\n      activateUser={activateUser}\r\n      deactivateUser={deactivateUser}\r\n    />\r\n  );\r\n});\r\n\r\nEmployeesContainer.displayName = \"EmployeesContainer\";\r\n\r\nexport default EmployeesContainer;\r\n"],"sourceRoot":""}